{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web-ZMQSocket\\\\Web-ZQMSocket_Font-end\\\\my-zmqsocket\\\\src\\\\components\\\\header\\\\formRegister.js\",\n    _s = $RefreshSig$();\n\nimport { Button, DatePicker, Form, Input, Select, notification } from 'antd';\nimport axios from 'axios';\nimport React from 'react';\nimport { URL_API } from '../../utils/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nexport const FormRegister = props => {\n  _s();\n\n  const {\n    setIsOpenFormRegister\n  } = props;\n  const [form] = Form.useForm();\n\n  const onDobChange = (date, dateString) => {\n    form.setFieldsValue({\n      dob: dateString\n    });\n  };\n\n  const onGenderChange = value => {\n    switch (value) {\n      case true:\n        form.setFieldsValue({\n          gender: true\n        });\n        return;\n\n      case false:\n        form.setFieldsValue({\n          gender: true\n        });\n        return;\n    }\n  };\n\n  const onFinish = values => {\n    const payload = {\n      username: values.username,\n      password: values.password,\n      email: values.email,\n      gender: values.gender,\n      dob: values.dob,\n      address: values.address,\n      phoneNumber: values.phoneNumber\n    };\n    axios.post(`${URL_API}/User/register-user`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      // register success\n      if (res.data.success) {\n        notification.open({\n          message: 'Bạn đã đăng ký thành công'\n        });\n        setIsOpenFormRegister(false);\n      } else {\n        notification.open({\n          message: res.data.message\n        });\n      }\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    layout: \"vertical\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Vui l\\xF2ng nh\\u1EADp username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Vui l\\xF2ng nh\\u1EADp password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, _ref => {\n        let {\n          getFieldValue\n        } = _ref;\n        return {\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('The two passwords that you entered do not match!'));\n          }\n\n        };\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormRegister, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"names":["Button","DatePicker","Form","Input","Select","notification","axios","React","URL_API","Option","FormRegister","props","setIsOpenFormRegister","form","useForm","onDobChange","date","dateString","setFieldsValue","dob","onGenderChange","value","gender","onFinish","values","payload","username","password","email","address","phoneNumber","post","headers","then","res","data","success","open","message","catch","error","console","log","required","getFieldValue","validator","_","Promise","resolve","reject","Error"],"sources":["C:/Web-ZMQSocket/Web-ZQMSocket_Font-end/my-zmqsocket/src/components/header/formRegister.js"],"sourcesContent":["import { Button, DatePicker, Form, Input, Select, notification  } from 'antd';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { URL_API } from '../../utils/common';\r\nconst { Option } = Select;\r\n\r\nexport const FormRegister = (props) => {\r\n\r\n  const { setIsOpenFormRegister } = props;\r\n  const [form] = Form.useForm();\r\n\r\n  const onDobChange = (date, dateString) => {\r\n    form.setFieldsValue({\r\n      dob: dateString,\r\n    });\r\n  };\r\n\r\n  const onGenderChange = (value) => {\r\n    switch (value) {\r\n      case true:\r\n        form.setFieldsValue({\r\n          gender: true,\r\n        });\r\n        return;\r\n      case false:\r\n        form.setFieldsValue({\r\n          gender: true,\r\n        });\r\n        return;\r\n    }\r\n  };\r\n  const onFinish = (values) => {\r\n    const payload = {\r\n      username: values.username,\r\n      password: values.password,\r\n      email: values.email,\r\n      gender: values.gender,\r\n      dob: values.dob,\r\n      address: values.address,\r\n      phoneNumber: values.phoneNumber\r\n    }\r\n    axios.post(`${URL_API}/User/register-user`, payload , {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      }\r\n    })\r\n      .then(res => {\r\n        // register success\r\n        if(res.data.success) {\r\n          notification.open({\r\n            message: 'Bạn đã đăng ký thành công',\r\n          });\r\n          setIsOpenFormRegister(false);\r\n        } else {\r\n          notification.open({\r\n            message: res.data.message,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"basic\"\r\n      layout=\"vertical\"\r\n      onFinish={onFinish}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder='Vui lòng nhập username' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password placeholder='Vui lòng nhập password' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n            },                                                                                  \r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      {/* <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"phoneNumber\"\r\n        label=\"SDT\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input type='number' />\r\n      </Form.Item>\r\n      <Form.Item name=\"gender\" label=\"Gender\" rules={[{ required: true }]}>\r\n        <Select\r\n          placeholder=\"Select a option and change input text above\"\r\n          onChange={onGenderChange}\r\n          allowClear\r\n        >\r\n          <Option value={true}>Nam</Option>\r\n          <Option value={false}>Nữ</Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item label=\"DatePicker\" name=\"dob\">\r\n        <DatePicker format=\"YYYY/MM/DD\" onChange={onDobChange}/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your address!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder='Vui lòng nhập địa chỉ' />\r\n      </Form.Item> */}\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}